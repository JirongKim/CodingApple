{"ast":null,"code":"/**\n * react-query\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar index = require('../../query-core/build/esm/index.js');\n\nvar useQueries = require('./useQueries.js');\n\nvar useQuery = require('./useQuery.js');\n\nvar QueryClientProvider = require('./QueryClientProvider.js');\n\nvar Hydrate = require('./Hydrate.js');\n\nvar QueryErrorResetBoundary = require('./QueryErrorResetBoundary.js');\n\nvar useIsFetching = require('./useIsFetching.js');\n\nvar useIsMutating = require('./useIsMutating.js');\n\nvar useMutation = require('./useMutation.js');\n\nvar useInfiniteQuery = require('./useInfiniteQuery.js');\n\nvar isRestoring = require('./isRestoring.js');\n\nexports.CancelledError = index.CancelledError;\nexports.InfiniteQueryObserver = index.InfiniteQueryObserver;\nexports.MutationCache = index.MutationCache;\nexports.MutationObserver = index.MutationObserver;\nexports.QueriesObserver = index.QueriesObserver;\nexports.QueryCache = index.QueryCache;\nexports.QueryClient = index.QueryClient;\nexports.QueryObserver = index.QueryObserver;\nexports.dehydrate = index.dehydrate;\nexports.focusManager = index.focusManager;\nexports.hashQueryKey = index.hashQueryKey;\nexports.hydrate = index.hydrate;\nexports.isCancelledError = index.isCancelledError;\nexports.isError = index.isError;\nexports.notifyManager = index.notifyManager;\nexports.onlineManager = index.onlineManager;\nexports.parseFilterArgs = index.parseFilterArgs;\nexports.parseMutationArgs = index.parseMutationArgs;\nexports.parseMutationFilterArgs = index.parseMutationFilterArgs;\nexports.parseQueryArgs = index.parseQueryArgs;\nexports.useQueries = useQueries.useQueries;\nexports.useQuery = useQuery.useQuery;\nexports.QueryClientProvider = QueryClientProvider.QueryClientProvider;\nexports.defaultContext = QueryClientProvider.defaultContext;\nexports.useQueryClient = QueryClientProvider.useQueryClient;\nexports.Hydrate = Hydrate.Hydrate;\nexports.useHydrate = Hydrate.useHydrate;\nexports.QueryErrorResetBoundary = QueryErrorResetBoundary.QueryErrorResetBoundary;\nexports.useQueryErrorResetBoundary = QueryErrorResetBoundary.useQueryErrorResetBoundary;\nexports.useIsFetching = useIsFetching.useIsFetching;\nexports.useIsMutating = useIsMutating.useIsMutating;\nexports.useMutation = useMutation.useMutation;\nexports.useInfiniteQuery = useInfiniteQuery.useInfiniteQuery;\nexports.IsRestoringProvider = isRestoring.IsRestoringProvider;\nexports.useIsRestoring = isRestoring.useIsRestoring;","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["/**\n * react-query\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('../../query-core/build/esm/index.js');\nvar useQueries = require('./useQueries.js');\nvar useQuery = require('./useQuery.js');\nvar QueryClientProvider = require('./QueryClientProvider.js');\nvar Hydrate = require('./Hydrate.js');\nvar QueryErrorResetBoundary = require('./QueryErrorResetBoundary.js');\nvar useIsFetching = require('./useIsFetching.js');\nvar useIsMutating = require('./useIsMutating.js');\nvar useMutation = require('./useMutation.js');\nvar useInfiniteQuery = require('./useInfiniteQuery.js');\nvar isRestoring = require('./isRestoring.js');\n\n\n\nexports.CancelledError = index.CancelledError;\nexports.InfiniteQueryObserver = index.InfiniteQueryObserver;\nexports.MutationCache = index.MutationCache;\nexports.MutationObserver = index.MutationObserver;\nexports.QueriesObserver = index.QueriesObserver;\nexports.QueryCache = index.QueryCache;\nexports.QueryClient = index.QueryClient;\nexports.QueryObserver = index.QueryObserver;\nexports.dehydrate = index.dehydrate;\nexports.focusManager = index.focusManager;\nexports.hashQueryKey = index.hashQueryKey;\nexports.hydrate = index.hydrate;\nexports.isCancelledError = index.isCancelledError;\nexports.isError = index.isError;\nexports.notifyManager = index.notifyManager;\nexports.onlineManager = index.onlineManager;\nexports.parseFilterArgs = index.parseFilterArgs;\nexports.parseMutationArgs = index.parseMutationArgs;\nexports.parseMutationFilterArgs = index.parseMutationFilterArgs;\nexports.parseQueryArgs = index.parseQueryArgs;\nexports.useQueries = useQueries.useQueries;\nexports.useQuery = useQuery.useQuery;\nexports.QueryClientProvider = QueryClientProvider.QueryClientProvider;\nexports.defaultContext = QueryClientProvider.defaultContext;\nexports.useQueryClient = QueryClientProvider.useQueryClient;\nexports.Hydrate = Hydrate.Hydrate;\nexports.useHydrate = Hydrate.useHydrate;\nexports.QueryErrorResetBoundary = QueryErrorResetBoundary.QueryErrorResetBoundary;\nexports.useQueryErrorResetBoundary = QueryErrorResetBoundary.useQueryErrorResetBoundary;\nexports.useIsFetching = useIsFetching.useIsFetching;\nexports.useIsMutating = useIsMutating.useIsMutating;\nexports.useMutation = useMutation.useMutation;\nexports.useInfiniteQuery = useInfiniteQuery.useInfiniteQuery;\nexports.IsRestoringProvider = isRestoring.IsRestoringProvider;\nexports.useIsRestoring = isRestoring.useIsRestoring;\n"]},"metadata":{},"sourceType":"script"}