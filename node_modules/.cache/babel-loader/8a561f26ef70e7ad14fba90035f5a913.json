{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nlet cart = createSlice({\n  name: 'cart',\n  initialState: [{\n    id: 0,\n    name: 'White and Black',\n    count: 2\n  }, {\n    id: 1,\n    name: 'Grey Yordan',\n    count: 1\n  }],\n  reducers: {\n    changeCount(state, action) {\n      let name = action.payload;\n\n      for (var obj of state) {\n        if (obj.name == name) {\n          obj.count++;\n          return;\n        }\n      }\n    },\n\n    addItem(state, action) {\n      console.log(action.payload);\n      let [id, name] = action.payload;\n\n      for (var obj of state) {\n        if (obj.name == name) {\n          obj.count++;\n          return;\n        }\n      }\n\n      state.push({\n        id: id,\n        name: name,\n        count: 1\n      });\n    },\n\n    removeItem(state, action) {\n      console.log(action.payload);\n      let name = action.payload;\n      let i = 0;\n\n      for (var obj of state) {\n        if (obj.name == name) {\n          state.splice(i, 1);\n          return;\n        }\n\n        i++;\n      }\n    }\n\n  }\n});\nexport let {\n  changeCount,\n  addItem,\n  removeItem\n} = cart.actions;\nexport default cart;","map":{"version":3,"names":["configureStore","createSlice","cart","name","initialState","id","count","reducers","changeCount","state","action","payload","obj","addItem","console","log","push","removeItem","i","splice","actions"],"sources":["/Users/jrkim/Desktop/Programming/WEB/CodingApple/src/store/cartSlice.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\n\nlet cart = createSlice({ \n  name : 'cart',\n  initialState : \n  [\n    {id : 0, name : 'White and Black', count : 2},\n    {id : 1, name : 'Grey Yordan', count : 1}\n  ],\n  reducers : {\n    changeCount(state, action){\n      let name = action.payload;\n      for(var obj of state){\n        if(obj.name == name){\n          obj.count++;\n          return;\n        }\n      }\n    },\n    addItem(state, action){\n      console.log(action.payload);\n      let [id, name] = action.payload;\n      for(var obj of state){\n        if(obj.name == name){\n          obj.count++;\n          return;\n        }\n      }\n      state.push({id : id, name : name, count : 1});\n    },\n    removeItem(state, action){\n      console.log(action.payload);\n      let name = action.payload;\n      let i = 0;\n      for(var obj of state){\n        if(obj.name == name){\n          state.splice(i, 1);\n          return;\n        }\n        i++;\n      }\n    },\n  }\n})\n\nexport let { changeCount, addItem, removeItem } = cart.actions\n\nexport default cart"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,IAAIC,IAAI,GAAGD,WAAW,CAAC;EACrBE,IAAI,EAAG,MADc;EAErBC,YAAY,EACZ,CACE;IAACC,EAAE,EAAG,CAAN;IAASF,IAAI,EAAG,iBAAhB;IAAmCG,KAAK,EAAG;EAA3C,CADF,EAEE;IAACD,EAAE,EAAG,CAAN;IAASF,IAAI,EAAG,aAAhB;IAA+BG,KAAK,EAAG;EAAvC,CAFF,CAHqB;EAOrBC,QAAQ,EAAG;IACTC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAe;MACxB,IAAIP,IAAI,GAAGO,MAAM,CAACC,OAAlB;;MACA,KAAI,IAAIC,GAAR,IAAeH,KAAf,EAAqB;QACnB,IAAGG,GAAG,CAACT,IAAJ,IAAYA,IAAf,EAAoB;UAClBS,GAAG,CAACN,KAAJ;UACA;QACD;MACF;IACF,CATQ;;IAUTO,OAAO,CAACJ,KAAD,EAAQC,MAAR,EAAe;MACpBI,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACC,OAAnB;MACA,IAAI,CAACN,EAAD,EAAKF,IAAL,IAAaO,MAAM,CAACC,OAAxB;;MACA,KAAI,IAAIC,GAAR,IAAeH,KAAf,EAAqB;QACnB,IAAGG,GAAG,CAACT,IAAJ,IAAYA,IAAf,EAAoB;UAClBS,GAAG,CAACN,KAAJ;UACA;QACD;MACF;;MACDG,KAAK,CAACO,IAAN,CAAW;QAACX,EAAE,EAAGA,EAAN;QAAUF,IAAI,EAAGA,IAAjB;QAAuBG,KAAK,EAAG;MAA/B,CAAX;IACD,CApBQ;;IAqBTW,UAAU,CAACR,KAAD,EAAQC,MAAR,EAAe;MACvBI,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACC,OAAnB;MACA,IAAIR,IAAI,GAAGO,MAAM,CAACC,OAAlB;MACA,IAAIO,CAAC,GAAG,CAAR;;MACA,KAAI,IAAIN,GAAR,IAAeH,KAAf,EAAqB;QACnB,IAAGG,GAAG,CAACT,IAAJ,IAAYA,IAAf,EAAoB;UAClBM,KAAK,CAACU,MAAN,CAAaD,CAAb,EAAgB,CAAhB;UACA;QACD;;QACDA,CAAC;MACF;IACF;;EAhCQ;AAPU,CAAD,CAAtB;AA2CA,OAAO,IAAI;EAAEV,WAAF;EAAeK,OAAf;EAAwBI;AAAxB,IAAuCf,IAAI,CAACkB,OAAhD;AAEP,eAAelB,IAAf"},"metadata":{},"sourceType":"module"}