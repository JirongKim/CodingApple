{"ast":null,"code":"/**\n * react-query\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React__namespace.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React__namespace.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\n\nconst QueryErrorResetBoundary = _ref => {\n  let {\n    children\n  } = _ref;\n  const [value] = React__namespace.useState(() => createValue());\n  return /*#__PURE__*/React__namespace.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexports.QueryErrorResetBoundary = QueryErrorResetBoundary;\nexports.useQueryErrorResetBoundary = useQueryErrorResetBoundary;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,SAASA,WAAT,GAAqD;EACnD,IAAIC,OAAO,GAAG,KAAd;EACA,OAAO;IACLC,UAAU,EAAE,MAAM;MAChBD,OAAO,GAAG,KAAVA;IAFG;IAILE,KAAK,EAAE,MAAM;MACXF,OAAO,GAAG,IAAVA;IALG;IAOLA,OAAO,EAAE,MAAM;MACb,OAAOA,OAAP;IACD;EATI,CAAP;AAWD;;AAED,MAAMG,8BAA8B,gBAAGC,gBAAK,CAACC,aAAND,CAAoBL,WAAW,EAA/BK,CAAvC,C,CAAA;;AAIO,MAAME,0BAA0B,GAAG,MACxCF,gBAAK,CAACG,UAANH,CAAiBD,8BAAjBC,CADK,C,CACL;;;AAUK,MAAMI,uBAAuB,GAAG,QAEH;EAAA,IAFI;IACtCC;EADsC,CAEJ;EAClC,MAAM,CAACC,KAAD,IAAUN,gBAAK,CAACO,QAANP,CAAe,MAAML,WAAW,EAAhCK,CAAhB;EACA,oBACEA,+BAACD,8BAAD,CAAgCS,QAAhCR;IAAyCM,KAAK,EAAEA;EAAhD,GACG,OAAOD,QAAP,KAAoB,UAApB,GACIA,QAAD,CAAuBC,KAAvB,CADH,GAEGD,QAHNL,CADF;AAOD,CAXM","names":["createValue","isReset","clearReset","reset","QueryErrorResetBoundaryContext","React","createContext","useQueryErrorResetBoundary","useContext","QueryErrorResetBoundary","children","value","useState","Provider"],"sources":["/Users/jrkim/Desktop/Programming/WEB/CodingApple/node_modules/react-query/src/QueryErrorResetBoundary.tsx"],"sourcesContent":["import * as React from 'react'\n\n// CONTEXT\n\ninterface QueryErrorResetBoundaryValue {\n  clearReset: () => void\n  isReset: () => boolean\n  reset: () => void\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport interface QueryErrorResetBoundaryProps {\n  children:\n    | ((value: QueryErrorResetBoundaryValue) => React.ReactNode)\n    | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function'\n        ? (children as Function)(value)\n        : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}