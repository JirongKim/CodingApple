{"ast":null,"code":"/**\n * react-query\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexports.shouldThrowError = shouldThrowError;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAO,SAASA,gBAAT,CACLC,iBADK,EAELC,MAFK,EAGI;EACT;EACA,IAAI,OAAOD,iBAAP,KAA6B,UAAjC,EAA6C;IAC3C,OAAOA,iBAAiB,CAAC,GAAGC,MAAJ,CAAxB;EACD;;EAED,OAAO,CAAC,CAACD,iBAAT;AACD","names":["shouldThrowError","_useErrorBoundary","params"],"sources":["/Users/jrkim/Desktop/Programming/WEB/CodingApple/node_modules/react-query/src/utils.ts"],"sourcesContent":["export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n"]},"metadata":{},"sourceType":"script"}